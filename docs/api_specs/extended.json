{
    "openapi": "3.0.0",
    "info": {
        "title": "Cambridge Sports Analytics Prediction Engine API",
        "description": "A robust, resilient, and flexible prediction analytics API that interacts with any dataset of predictive variables and outcomes.",
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://api.csanalytics.io/v2/prediction-engine",
            "description": "A robust, resilient, and flexible prediction analytics API that interacts with any dataset of predictive variables and outcomes."
        }
    ],
    "x-hideTryItPanel": true,
    "paths": {
        "/grid": {
            "post": {
                "tags": [
                    "predict"
                ],
                "description": "Extended specifications for invoking relevance-based grid predictions.",
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    },
                    {
                        "$ref": "#/components/headers/x-api-key"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for grid prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_body" },
                                    { "$ref": "#/components/schemas/psr_options" },
                                    { "$ref": "#/components/schemas/maxfit_options" },
                                    { "$ref": "#/components/schemas/grid_options" }
                                ]
                            },
                            "example": {
                                "access_id": "CSA_ACCESS_ID",
                                "y": [[18.8], [2.3], [3], [6.7], [15.2], [20.9], [4], [2.4], [9.7], [8.8], [13.4], [8.4], [2.9], [2.7], [23], [8], [12], [10.3], [6.8], [7.1], [6.7], [12.3], [5.7], [2.5], [30.1], [5.4], [11.5], [9.9], [4], [3.6], [1.8], [11], [7.1], [11.5], [27], [5.4], [2.5], [28.9], [1.3], [7.3], [19.4], [8.6], [7.5], [17.4], [1.5], [15.9], [12.1], [20.3], [6.7]],
                                "X": [[25, 2, 76, 53.7, 23.1], [29, 1, 78, 39.1, 5.7], [32, 2, 77, 54.1, 5.3], [30, 5, 82, 68.7, 8.7], [24, 1, 69, 51, 20.3], [25, 2, 79, 50.2, 20], [35, 3, 80, 51.5, 9.4], [25, 3, 81, 44, 2.2], [27, 2, 77, 49.8, 12.1], [28, 4, 79, 32.2, 2.5], [33, 1, 75, 52.6, 16.2], [27, 2, 77, 50.1, 4], [21, 1, 75, 54, 4.6], [25, 2, 76, 64.3, 4.9], [24, 5, 85, 51.7, 27.5]],
                                "theta": [[24, 5, 81, 60, 11]],
                                "threshold_range": [0, 0.20, 0.50, 0.80],
                                "is_threshold_percent": true,
                                "most_eval": true,
                                "eval_type": "both",
                                "stepsize": 0.2,
                                "attribute_combi": null,
                                "k": 1
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response body of a successful post job (grid).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/prediction_response" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/grid\"\n\npayload = {\n    \"y\": [[18.8], [2.3], [3.0], [6.7], [15.2], [20.9], [4.0], [2.4], [9.7], [8.8], [13.4], [8.4], [2.9], [2.7], [23.0], [8.0], [12.0], [10.3], [6.8], [7.1], [6.7], [12.3], [5.7], [2.5], [30.1], [5.4], [11.5], [9.9], [4.0], [3.6], [1.8], [11.0], [7.1], [11.5], [27.0], [5.4], [2.5], [28.9], [1.3], [7.3], [19.4], [8.6], [7.5], [17.4], [1.5], [15.9], [12.1], [20.3], [6.7]],\n    \"X\": [[25.0, 2.0, 76.0, 53.7, 23.1], [29.0, 1.0, 78.0, 39.1, 5.7], [32.0, 2.0, 77.0, 54.1, 5.3], [30.0, 5.0, 82.0, 68.7, 8.7], [24.0, 1.0, 69.0, 51.0, 20.3], [25.0, 2.0, 79.0, 50.2, 20.0]],\n    \"theta\": [[24.0, 5.0, 81.0, 60.0, 11.0], [29.0, 3.0, 80.0, 46.4, 3.5], [25.0, 5.0, 81.0, 42.9, 1.3], [25.0, 4.0, 80.0, 55.2, 26.9]],\n    \"threshold_range\": [0, 0.20, 0.50, 0.80],\n    \"is_threshold_percent\": true,\n    \"most_eval\": true,\n    \"eval_type\": \"both\",\n    \"stepsize\": 0.2,\n    \"attribute_combi\": null,\n    \"k\": 1\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))\n\nprint(response.text)"
                    }
                ]
            }
        },
        "/maxfit": {
            "post": {
                "tags": [
                    "predict"
                ],
                "description": "Extended specifications for invoking relevance-based maxfit predictions.",
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    },
                    {
                        "$ref": "#/components/headers/x-api-key"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for maxfit prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_body" },
                                    { "$ref": "#/components/schemas/psr_options" },
                                    { "$ref": "#/components/schemas/maxfit_options" }
                                ]
                            },
                            "example": {
                                "access_id": "CSA_ACCESS_ID",
                                "y": [[18.8], [2.3], [3], [6.7], [15.2], [20.9], [4], [2.4], [9.7], [8.8], [13.4], [8.4], [2.9], [2.7], [23], [8], [12], [10.3], [6.8], [7.1], [6.7], [12.3], [5.7], [2.5], [30.1], [5.4], [11.5], [9.9], [4], [3.6], [1.8], [11], [7.1], [11.5], [27], [5.4], [2.5], [28.9], [1.3], [7.3], [19.4], [8.6], [7.5], [17.4], [1.5], [15.9], [12.1], [20.3], [6.7]],
                                "X": [[25, 2, 76, 53.7, 23.1], [29, 1, 78, 39.1, 5.7], [32, 2, 77, 54.1, 5.3], [30, 5, 82, 68.7, 8.7], [24, 1, 69, 51, 20.3], [25, 2, 79, 50.2, 20], [35, 3, 80, 51.5, 9.4], [25, 3, 81, 44, 2.2], [27, 2, 77, 49.8, 12.1], [28, 4, 79, 32.2, 2.5], [33, 1, 75, 52.6, 16.2], [27, 2, 77, 50.1, 4], [21, 1, 75, 54, 4.6], [25, 2, 76, 64.3, 4.9], [24, 5, 85, 51.7, 27.5]],
                                "theta": [[24, 5, 81, 60, 11]],
                                "threshold_range": [0, 0.20, 0.50, 0.80],
                                "is_threshold_percent": true,
                                "most_eval": true,
                                "eval_type": "both",
                                "stepsize": 0.2
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response body of a successful post job (maxfit).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/prediction_response" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/maxfit\"\n\npayload = {\n    \"y\": [[18.8], [2.3], [3.0], [6.7], [15.2], [20.9], [4.0], [2.4], [9.7], [8.8], [13.4], [8.4], [2.9], [2.7], [23.0], [8.0], [12.0], [10.3], [6.8], [7.1], [6.7], [12.3], [5.7], [2.5], [30.1], [5.4], [11.5], [9.9], [4.0], [3.6], [1.8], [11.0], [7.1], [11.5], [27.0], [5.4], [2.5], [28.9], [1.3], [7.3], [19.4], [8.6], [7.5], [17.4], [1.5], [15.9], [12.1], [20.3], [6.7]],\n    \"X\": [[25.0, 2.0, 76.0, 53.7, 23.1], [29.0, 1.0, 78.0, 39.1, 5.7], [32.0, 2.0, 77.0, 54.1, 5.3], [30.0, 5.0, 82.0, 68.7, 8.7], [24.0, 1.0, 69.0, 51.0, 20.3], [25.0, 2.0, 79.0, 50.2, 20.0]],\n    \"theta\": [[24.0, 5.0, 81.0, 60.0, 11.0], [29.0, 3.0, 80.0, 46.4, 3.5], [25.0, 5.0, 81.0, 42.9, 1.3], [25.0, 4.0, 80.0, 55.2, 26.9]],\n    \"threshold_range\": [0, 0.20, 0.50, 0.80],\n    \"is_threshold_percent\": true,\n    \"most_eval\": true,\n    \"eval_type\": \"both\",\n    \"stepsize\": 0.2,\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))\n\nprint(response.text)"
                    }
                ]
            }
        },
        "/psr": {
            "post": {
                "tags": [
                    "predict"
                ],
                "description": "Extended specifications for invoking relevance-based partial sample regression predictions.",
                "parameters": [
                    {
                        "$ref": "#/components/headers/Content-Type"
                    },
                    {
                        "$ref": "#/components/headers/Connection"
                    },
                    {
                        "$ref": "#/components/headers/x-api-key"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Request body for psr prediction",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf" : [
                                    { "$ref": "#/components/schemas/prediction_body" },
                                    { "$ref": "#/components/schemas/threshold_option" },
                                    { "$ref": "#/components/schemas/psr_options" }
                                ]
                            },
                            "example": {
                                "access_id": "CSA_ACCESS_ID",
                                "y": [[18.8], [2.3], [3], [6.7], [15.2], [20.9], [4], [2.4], [9.7], [8.8], [13.4], [8.4], [2.9], [2.7], [23], [8], [12], [10.3], [6.8], [7.1], [6.7], [12.3], [5.7], [2.5], [30.1], [5.4], [11.5], [9.9], [4], [3.6], [1.8], [11], [7.1], [11.5], [27], [5.4], [2.5], [28.9], [1.3], [7.3], [19.4], [8.6], [7.5], [17.4], [1.5], [15.9], [12.1], [20.3], [6.7]],
                                "X": [[25, 2, 76, 53.7, 23.1], [29, 1, 78, 39.1, 5.7], [32, 2, 77, 54.1, 5.3], [30, 5, 82, 68.7, 8.7], [24, 1, 69, 51, 20.3], [25, 2, 79, 50.2, 20], [35, 3, 80, 51.5, 9.4], [25, 3, 81, 44, 2.2], [27, 2, 77, 49.8, 12.1], [28, 4, 79, 32.2, 2.5], [33, 1, 75, 52.6, 16.2], [27, 2, 77, 50.1, 4], [21, 1, 75, 54, 4.6], [25, 2, 76, 64.3, 4.9], [24, 5, 85, 51.7, 27.5]],
                                "theta": [[24, 5, 81, 60, 11]],
                                "threshold": 0.50,
                                "is_threshold_percent": true,
                                "most_eval": true,
                                "eval_type": "both"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response body of a successful post job (psr).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/prediction_response" 
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Python",
                        "label": "Python Example",
                        "source": "import requests\nimport json\n\nurl = \"https://api.csanalytics.io/v2/prediction-engine/psr\"\n\npayload = {\n    \"y\": [[18.8], [2.3], [3.0], [6.7], [15.2], [20.9], [4.0], [2.4], [9.7], [8.8], [13.4], [8.4], [2.9], [2.7], [23.0], [8.0], [12.0], [10.3], [6.8], [7.1], [6.7], [12.3], [5.7], [2.5], [30.1], [5.4], [11.5], [9.9], [4.0], [3.6], [1.8], [11.0], [7.1], [11.5], [27.0], [5.4], [2.5], [28.9], [1.3], [7.3], [19.4], [8.6], [7.5], [17.4], [1.5], [15.9], [12.1], [20.3], [6.7]],\n    \"X\": [[25.0, 2.0, 76.0, 53.7, 23.1], [29.0, 1.0, 78.0, 39.1, 5.7], [32.0, 2.0, 77.0, 54.1, 5.3], [30.0, 5.0, 82.0, 68.7, 8.7], [24.0, 1.0, 69.0, 51.0, 20.3], [25.0, 2.0, 79.0, 50.2, 20.0]],\n    \"theta\": [[24.0, 5.0, 81.0, 60.0, 11.0], [29.0, 3.0, 80.0, 46.4, 3.5], [25.0, 5.0, 81.0, 42.9, 1.3], [25.0, 4.0, 80.0, 55.2, 26.9]],\n    \"threshold\": 0.50,\n    \"is_threshold_percent\": true,\n    \"most_eval\": true,\n    \"eval_type\": \"both\",\n}\n\nheaders = {\n  'x-api-key': 'CSA_API_KEY',\n  'Content-Type': 'application/json',\n  'Connection': 'keep-alive'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=json.dumps(payload))\n\nprint(response.text)"
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header",
                "description": "API key required to access the CSA Prediction Engine API"
            }
        },
        "headers": {
            "Content-Type": {
                "in": "header",
                "description": "The content type of the request (application/json)",
                "schema": {
                    "type": "string",
                    "example": "application/json"
                }
            },
            "Connection": {
                "in": "header",
                "description": "Connection header value (keep-alive)",
                "schema": {
                    "type": "string",
                    "example": "keep-alive"
                }
            }
        },
        "schemas": {
            "prediction_response": {
                "type": "object",
                "properties": {
                    "job_id": { "type": "integer", "description": "Job ID" },
                    "job_code": { "type": "string", "description": "Job code" }
                }
            },
            "prediction_body": {
                "required": [
                    "access_id",
                    "y",
                    "X",
                    "theta"
                ],
                "type": "object",
                "properties": {
                    "access_id": {
                        "type": "string",
                        "description": "User access identification string for the CSA Prediction Engine"
                    },
                    "y": {
                        "type": "array",
                        "description": "Column vector of dependent variable. [N-by-1]",
                        "items": {
                            "type": "array",
                            "items": {
                            "type": "number",
                            "format": "float"
                            }
                        }
                    },
                    "X": {
                        "type": "array",
                        "description": "Matrix of independent variable(s). [N-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                            "type": "number",
                            "format": "float"
                            }
                        }
                    },
                    "theta": {
                        "type": "array",
                        "description": "Row vector of prediction circumstances. [1-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                            "type": "number",
                            "format": "float"
                            }
                        }
                    }
                }
            },
            "threshold_option": {
                "type": "object",
                "properties": {
                    "threshold": {
                            "type": "number",
                            "description": "Threshold to evaluate the censor function (relevance or similarity). Float or [1-by-T], if not specified then the model will evaluate across thresholds from [0, 0.99) in 0.20 increments.",
                            "default": null
                    }
                }
            },
            "psr_options": {
                "type" : "object",
                "properties": {
                    "is_threshold_percent": {
                        "type": "boolean",
                        "description": "Specify whether the threshold range specified is in percentage (decimal) units.",
                        "default": true
                    },
                    "eval_type": {
                        "type": "string",
                        "description": "Specify evaluation censor type: relevance, similarity, or both.",
                        "enum": ["relevance", "similarity", "both"],
                        "default": "both"
                    },
                    "most_eval": {
                        "type": "boolean",
                        "description": "Specify the direction of the threshold evaluation on the corresponding censor type.\n\n- true: [eval_type] score > threshold\n- false: [eval_type] score < threshold",
                        "default": true
                    }
                }
            },
            "maxfit_options": {
                "type": "object",
                "properties": {
                    "threshold_range": {
                        "type": "array",
                        "description": "Min/max range for evaluating the maxfit threshold. Specify a min/max tuple or explicitly specify a vector of thresholds. [1-by-2] or [1-by-T]",
                        "items": {
                            "type": "number",
                            "format": "float"
                        },
                        "default": [0, 0.20, 0.50, 0.80],
                        "examples": {
                            "basic": {
                                "summary": "Min/max tuple",
                                "value": [0, 1]
                            },
                            "detailed": {
                                "summary": "Explicit threshold vector",
                                "value": [0, 0.20, 0.50, 0.80]
                            }
                        }
                    },
                    "stepsize": {
                        "type": "number",
                        "description": "Step size used to evaluate the range of thresholds. A smaller step size increases grid resolution, providing more precision. This option is ignored if an explicit threshold_range is provided instead of a min/max tuple.",
                        "default": 0.20
                    }
                }
            },
            "grid_options": {
                "type": "object",
                "properties": {
                    "attribute_combi": {
                        "type": "array",
                        "description": "Matrix of binary row vectors to indicate predictive variable choices. Each row represents a combination of variables to evaluate. If not specified, the prediction function will evaluate all possible combinations. [Q-by-K]",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "default": null,
                        "examples": {
                            "basic": {
                                "summary": "Evaluate one combination with only the second and third predictive variables",
                                "value": [[0, 1, 1, 0, 0]]
                            },
                            "detailed": {
                                "summary": "Evaluate a combination with the second and third variable, and another combination with only the fourth variable",
                                "value": [[0, 1, 1, 0, 0], [0, 0, 0, 1, 0]]
                            }
                        }
                    },
                    "k": {
                        "type": "integer",
                        "description": "The minimum number of predictive variables to include in each combination of variables evaluated. If not specified, the default is 1.",
                        "default": 1
                    }
                }
            }
        }
    }
}